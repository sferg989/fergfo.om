---
import { PreferredStocks } from '../enums/preferredStocks';
import StockOptionsSection from './stock_options_section.astro';
import { OptionsService } from '../services/optionsService';
import type { OptionData } from '../types/option';
import '../styles/optionsTable.css';

interface FetchedData {
  options: OptionData[];
  currentPrice: number;
  error?: string;
}

const symbols = Object.values(PreferredStocks);
const db = (Astro.locals.runtime?.env?.DB as D1Database) || null;
let stocksData: { symbol: string; data: FetchedData }[] = [];

if (db) {
  const optionsService = OptionsService.getInstance(db);
  const promises = symbols.map((symbol) => optionsService.fetchOptionsData(symbol));
  const results = await Promise.allSettled(promises);

  stocksData = results.map((result, index) => {
    const symbol = symbols[index];
    if (result.status === 'fulfilled') {
      return { symbol, data: result.value };
    }
    return {
      symbol,
      data: {
        options: [],
        currentPrice: 0,
        error: result.reason instanceof Error ? result.reason.message : 'Unknown error fetching data',
      },
    };
  });
} else {
  stocksData = symbols.map((symbol) => ({
    symbol,
    data: {
      options: [],
      currentPrice: 0,
      error: 'Database not available',
    },
  }));
}
---

<div class="preferred-stocks-container">
  <div class="flex justify-between items-center mb-6">
    <h1 class="text-2xl font-bold">Preferred Stocks Top Scoring Options</h1>
  </div>

  <div class="grid gap-8" id="stocks-container">
    {
      stocksData.map(({ symbol }) => (
        <StockOptionsSection symbol={symbol} />
      ))
    }
  </div>
</div>

<style>
  .preferred-stocks-container {
    padding: 1rem;
    max-width: 1400px;
    margin: 0 auto;
  }

  /* Global styles for score classes used by child components */
  :global(.score-excellent) {
    background-color: #dcfce7 !important;
    font-weight: bold;
    color: #166534;
  }

  :global(.score-good) {
    background-color: #d1fae5 !important;
    color: #047857;
  }

  :global(.score-moderate) {
    background-color: #ecfdf5 !important;
    color: #0f766e;
  }

  :global(.score-weak) {
    background-color: #f0f9ff !important;
    color: #0369a1;
  }

  :global(.score-poor) {
    background-color: #f9fafb !important;
    color: #4b5563;
  }
</style>
